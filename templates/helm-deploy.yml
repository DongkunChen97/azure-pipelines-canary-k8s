parameters:
  - name: partitionValue
  - name: buildId
  - name: secretName
  - name: podNumber

jobs:
  - deployment: helmInit
    displayName: init
    environment: "dongkun-canarytest.dongkun"
    variables:
      partition: ${{ parameters.partitionValue }}
      podNumber: ${{ parameters.podNumber }}

    strategy:
      runOnce:
        deploy:
          steps:
            - script: |
                export HELM_EXPERIMENTAL_OCI=1
                helm registry login sharedglobalservices.azurecr.io --username SharedGlobalServices --password ISkbz+F/5+s6eTfFagmVVHA2Wm03Zv0q
                helm pull oci://sharedglobalservices.azurecr.io/delivery/helm/sample-app --version 0.0.1
              displayName: pull helm chart

            - bash: |
                truePercent=100-$(partition)
                truePartition=$(( $(podNumber) *100 /$truePercent ))
                echo $truePartition
                echo "##vso[task.setVariable variable=truePartition;isoutput=true]$truePartition"
              name: GetPartition
              displayName: calculate partition

  - deployment: helmDeploy
    displayName: update
    dependsOn: helmInit
    environment: "dongkun-canarytest.dongkun"
    variables:
      partition: $[ dependencies.helmInit.outputs["GetPartition.truePartition"] ]
      buildId: ${{ parameters.buildId }}
      secretName: ${{ parameters.secretName }}
    strategy:
      runOnce:
        deploy:
          steps:
            - task: HelmDeploy@0
              displayName: do deploy
              inputs:
                connectionType: "Azure Resource Manager"
                azureSubscription: PromoteIQ-Playground (b558a354-8f0b-4461-8876-9d1e8b56360f)
                azureResourceGroup: dev-grf-del-iad-rg
                kubernetesCluster: dev-grf-del-iad-aks
                namespace: dongkun
                useClusterAdmin: true
                command: upgrade
                chartType: filepath
                chartPath: $(System.DefaultWorkingDirectory)/sample-app-0.0.1.tgz
                releaseName: rls-sample-app
                install: true
                waitForExecution: false
                arguments: >
                  --cleanup-on-fail
                  --set partitionValue=$(partition)
                  --set buildId=$(buildId)
                  --set imagePullSecrets=$(secretName)